{"version":3,"file":"static/js/523.007da8af.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/shared/DashboardCard.js","services/socket.service.js","views/dashboard/components/Temperature.js","views/dashboard/components/SpO2.js","views/dashboard/components/Pulse.js","views/dashboard/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Stack, Box } from '@mui/material';\r\n\r\nconst DashboardCard = ({\r\n  title,\r\n  subtitle,\r\n  children,\r\n  action,\r\n  footer,\r\n  cardheading,\r\n  headtitle,\r\n  headsubtitle,\r\n  middlecontent,\r\n}) => {\r\n\r\n  return (\r\n    <Card\r\n      sx={{ padding: 0 }}\r\n      elevation={9}\r\n      variant={undefined}\r\n    >\r\n      {cardheading ? (\r\n        <CardContent>\r\n          <Typography variant=\"h5\">{headtitle}</Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n            {headsubtitle}\r\n          </Typography>\r\n        </CardContent>\r\n      ) : (\r\n        <CardContent sx={{ p: \"30px\" }}>\r\n          {title ? (\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={2}\r\n              justifyContent=\"space-between\"\r\n              alignItems={'center'}\r\n              mb={3}\r\n            >\r\n              <Box>\r\n                {title ? <Typography variant=\"h5\">{title}</Typography> : ''}\r\n\r\n                {subtitle ? (\r\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    {subtitle}\r\n                  </Typography>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Box>\r\n              {action}\r\n            </Stack>\r\n          ) : null}\r\n\r\n          {children}\r\n        </CardContent>\r\n      )}\r\n\r\n      {middlecontent}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DashboardCard;\r\n","import socketIO from 'socket.io-client';\n\nexport const socket = socketIO.connect(process.env.REACT_APP_API_URL);\n","import React, {useState, useEffect} from 'react';\r\nimport { Select, MenuItem } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport DashboardCard from '../../../components/shared/DashboardCard';\r\nimport Chart from 'react-apexcharts';\r\nimport {socket} from \"../../../services/socket.service\"\r\nimport {Alert, AlertTitle} from '@mui/material';\r\n\r\nconst Temperature = () => {\r\n\r\n    // select\r\n    const [month, setMonth] = useState('1');\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [tempData, setTempData] = useState([97]);\r\n    const [labels, setLabels] = useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        setMonth(event.target.value);\r\n    };\r\n\r\n    // chart color\r\n    const theme = useTheme();\r\n    const primary = theme.palette.primary.main;\r\n    const secondary = theme.palette.secondary.main;\r\n\r\n    // chart\r\n    const options = {\r\n        scales: {\r\n            x: {\r\n                type: 'category',\r\n                categories: labels.slice(-15),\r\n                labels: {\r\n                    show: true,\r\n                    formatter: function(value, timestamp, index) {\r\n                        return new Date(value).toLocaleTimeString();\r\n                    }\r\n                },  \r\n                tickAmount: 8,\r\n                grid: {\r\n                    display: false,\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    stepSize: 10,\r\n                },\r\n            },\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            curve: 'smooth',\r\n            lineCap: 'butt',\r\n            colors: undefined,\r\n            width: 4,\r\n            dashArray: 0,      \r\n        }\r\n        \r\n    };\r\n    const seriescolumnchart = [\r\n        {\r\n            name: 'Data monitored',\r\n            data: tempData,\r\n        }\r\n    ]; \r\n\r\n    useEffect(() => {\r\n        socket.on('temp_receiver', data => {\r\n            const time = new Date().toLocaleTimeString();\r\n            setLabels(prevLabels => [...prevLabels.slice(-15), time]);\r\n            setTempData(prevData => [...prevData.slice(-15), data]);\r\n            if (data > 99) {\r\n              setAlerts(prevState => [...prevState, data]);\r\n            }\r\n            if (data < 99) {\r\n              setAlerts([]);\r\n            }\r\n\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <DashboardCard title=\"Temperature readings\" action={\r\n            <Select\r\n                labelId=\"month-dd\"\r\n                id=\"month-dd\"\r\n                value={month}\r\n                size=\"small\"\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={1}>May 2023</MenuItem>\r\n                <MenuItem value={2}>April 2023</MenuItem>\r\n                <MenuItem value={3}>March 2023</MenuItem>\r\n            </Select>\r\n        }>\r\n            <Chart\r\n                options={options}\r\n                series={seriescolumnchart}\r\n                type=\"line\"\r\n                height=\"370px\"\r\n            />\r\n        {alerts.length >= 3 && (\r\n            <Alert severity=\"warning\">\r\n              <AlertTitle>Warning</AlertTitle>\r\n                Temperature trend raising above 99 — <strong>about to alert gaurdian.</strong>\r\n            </Alert>\r\n        )}\r\n        </DashboardCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Temperature;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Stack, Typography, Avatar } from '@mui/material';\r\nimport { IconArrowUpLeft } from '@tabler/icons';\r\nimport DashboardCard from '../../../components/shared/DashboardCard';\r\nimport {Alert, AlertTitle} from '@mui/material';\r\nimport {socket} from \"../../../services/socket.service\"\r\n\r\nconst SpO2 = () => {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [SpO2Value, setSpO2Value] = useState(99);\r\n  const [seriescolumnchart, setSeriescolumnchart] = useState([98, 2]);\r\n  \r\n  // chart color\r\n  const theme = useTheme();\r\n  const primary = theme.palette.primary.main;\r\n  const primarylight = '#ecf2ff';\r\n  const successlight = theme.palette.success.light;\r\n  \r\n  // chart\r\n  const optionscolumnchart = {\r\n    chart: {\r\n      type: 'donut',\r\n      fontFamily: \"'Plus Jakarta Sans', sans-serif;\",\r\n      foreColor: '#adb0bb',\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      height: 155,\r\n    },\r\n    colors: [primary, primarylight, '#F9F9FD'],\r\n    plotOptions: {\r\n      pie: {\r\n        startAngle: 0,\r\n        endAngle: 360,\r\n        donut: {\r\n          size: '75%',\r\n          background: 'transparent',\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      theme: theme.palette.mode === 'dark' ? 'dark' : 'light',\r\n      fillSeriesColor: false,\r\n    },\r\n    stroke: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 991,\r\n        options: {\r\n          chart: {\r\n            width: 120,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('spo2_receiver', data => {\r\n        console.log(seriescolumnchart)\r\n        setSeriescolumnchart([data-0, 100-data]);\r\n        if (data < 95) {\r\n          setAlerts(prevState => [...prevState, data]);\r\n        }\r\n        if (data > 95) {\r\n          setAlerts([]);\r\n        }\r\n\r\n    });\r\n  }, [alerts]);\r\n\r\n  return (\r\n    <DashboardCard title=\"SpO2 Percentage\">\r\n      <Grid container spacing={3}>\r\n        {/* column */}\r\n        <Grid item xs={7} sm={7}>\r\n          <Typography variant=\"h3\" fontWeight=\"700\">\r\n            {seriescolumnchart[0]} %\r\n          </Typography>\r\n          <Stack direction=\"row\" spacing={1} mt={2} alignItems=\"center\">\r\n            <Avatar sx={{ bgcolor: successlight, width: 27, height: 27 }}>\r\n              <IconArrowUpLeft width={20} color=\"#39B69A\" />\r\n            </Avatar>\r\n            <Typography variant=\"subtitle2\" fontWeight=\"600\">\r\n              +1%\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              last month\r\n            </Typography>\r\n          </Stack>\r\n          <Stack spacing={3} mt={5} direction=\"row\">\r\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n              <Avatar\r\n                sx={{ width: 9, height: 9, bgcolor: primary, svg: { display: 'none' } }}\r\n              ></Avatar>\r\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Current\r\n              </Typography>\r\n            </Stack>\r\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n              <Avatar\r\n                sx={{ width: 9, height: 9, bgcolor: primarylight, svg: { display: 'none' } }}\r\n              ></Avatar>\r\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Lost\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        </Grid>\r\n        {/* column */}\r\n        <Grid item xs={5} sm={5}>\r\n          <Chart\r\n            options={optionscolumnchart}\r\n            series={seriescolumnchart}\r\n            type=\"donut\"\r\n            height=\"150px\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {alerts.length >= 3 && (\r\n        <Alert severity=\"warning\">\r\n          <AlertTitle>Warning</AlertTitle>\r\n            Temperature trend raising above 99 — <strong>about to alert gaurdian.</strong>\r\n        </Alert>\r\n      )}\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default SpO2;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Stack, Typography, Avatar, Fab } from '@mui/material';\r\nimport { IconArrowDownRight, IconHeart } from '@tabler/icons';\r\nimport DashboardCard from '../../../components/shared/DashboardCard';\r\n\r\nconst Pulse = () => {\r\n  // chart color\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.secondary.main;\r\n  const secondarylight = '#f5fcff';\r\n  const errorlight = '#fdede8';\r\n\r\n  // chart\r\n  const optionscolumnchart = {\r\n    chart: {\r\n      type: 'area',\r\n      fontFamily: \"'Plus Jakarta Sans', sans-serif;\",\r\n      foreColor: '#adb0bb',\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      height: 60,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n      group: 'sparklines',\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2,\r\n    },\r\n    fill: {\r\n      colors: [secondarylight],\r\n      type: 'solid',\r\n      opacity: 0.05,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    tooltip: {\r\n      theme: theme.palette.mode === 'dark' ? 'dark' : 'light',\r\n    },\r\n  };\r\n  const seriescolumnchart = [\r\n    {\r\n      name: '',\r\n      color: secondary,\r\n      data: [25, 66, 20, 40, 12, 58, 20],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <DashboardCard\r\n      title=\"Pulse rate\"\r\n      action={\r\n        <Fab color=\"secondary\" size=\"medium\" sx={{color: '#ffffff'}}>\r\n          <IconHeart width={24} />\r\n        </Fab>\r\n      }\r\n      footer={\r\n        <Chart options={optionscolumnchart} series={seriescolumnchart} type=\"area\" height=\"60px\" />\r\n      }\r\n    >\r\n      <>\r\n        <Typography variant=\"h3\" fontWeight=\"700\" mt=\"-20px\">\r\n          7 - 8\r\n        </Typography>\r\n        <Stack direction=\"row\" spacing={1} my={1} alignItems=\"center\">\r\n          <Avatar sx={{ bgcolor: errorlight, width: 27, height: 27 }}>\r\n            <IconArrowDownRight width={20} color=\"#FA896B\" />\r\n          </Avatar>\r\n          <Typography variant=\"subtitle2\" fontWeight=\"600\">\r\n            -12%\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n            last month\r\n          </Typography>\r\n        </Stack>\r\n      </>\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default Pulse;\r\n","import React from 'react';\r\nimport { Grid, Box } from '@mui/material';\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport Temperature from './components/Temperature';\r\nimport SpO2 from './components/SpO2';\r\nimport Pulse from './components/Pulse';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <PageContainer title=\"Dashboard\" description=\"this is Dashboard\">\r\n      <Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} lg={8}>\r\n            <Temperature />\r\n          </Grid>\r\n          <Grid item xs={12} lg={4}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <SpO2 />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Pulse />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","subtitle","action","footer","cardheading","headtitle","headsubtitle","middlecontent","Card","sx","padding","elevation","variant","undefined","CardContent","Typography","color","p","Stack","direction","spacing","justifyContent","alignItems","mb","Box","socket","socketIO","process","_useState","useState","_useState2","_slicedToArray","month","setMonth","_useState3","_useState4","alerts","setAlerts","_useState5","_useState6","tempData","setTempData","_useState7","_useState8","labels","setLabels","theme","useTheme","options","palette","primary","main","secondary","scales","x","type","categories","slice","show","formatter","value","timestamp","index","Date","toLocaleTimeString","tickAmount","grid","display","y","ticks","beginAtZero","stepSize","plugins","legend","stroke","curve","lineCap","colors","width","dashArray","seriescolumnchart","data","useEffect","on","time","prevLabels","concat","_toConsumableArray","prevData","prevState","_Fragment","DashboardCard","Select","labelId","id","size","onChange","event","target","MenuItem","Chart","series","height","length","Alert","severity","AlertTitle","setSeriescolumnchart","primarylight","successlight","success","light","optionscolumnchart","chart","fontFamily","foreColor","toolbar","plotOptions","pie","startAngle","endAngle","donut","background","tooltip","mode","fillSeriesColor","dataLabels","enabled","responsive","breakpoint","console","log","Grid","container","item","xs","sm","fontWeight","mt","Avatar","bgcolor","IconArrowUpLeft","svg","sparkline","group","fill","opacity","markers","Fab","IconHeart","my","IconArrowDownRight","PageContainer","lg","Temperature","SpO2","Pulse"],"sourceRoot":""}